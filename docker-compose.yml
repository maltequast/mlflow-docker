version: '3.2'
services:
  s3:
    image: minio/minio:RELEASE.2021-06-07T21-40-51Z
    container_name: aws-s3
    ports:
      - 9000:9000
    environment:
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
    command: 
      server /date
    networks:
      - A
    volumes:
      - ./s3:/date
  db:
      restart: always
      image: mysql/mysql-server:5.7.28
      container_name: mlflow_db
      expose:
          - "3306"
      environment:
          - MYSQL_DATABASE=${MYSQL_DATABASE}
          - MYSQL_USER=${MYSQL_USER}
          - MYSQL_PASSWORD=${MYSQL_PASSWORD}
          - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      volumes:
          - ./dbdata:/var/lib/mysql
      networks:
            - A
  datascience-notebook:
      image: jupyter:0.0.3
      volumes:
          - /Users/maltequast/PycharmProjects/algo/demand-forecasting:/app/
      ports:
          - "8888:8888"
      command: "jupyter notebook --port=8888 --ip=0.0.0.0 --NotebookApp.allow_remote_access=True --allow-root --NotebookApp.token='' --NotebookApp.password=''"
      user: root
      environment:
          NB_USER: docker_worker
          NB_UID: 1008
          NB_GID: 1011
          CHOWN_HOME: 'yes'
          CHOWN_HOME_OPTS: -R
      env_file:
          - jupyter.env
      networks:
          - A
  mlflow:
      container_name: tracker_mlflow
      image: tracker_ml
      build:
          context: ./mlflow
          dockerfile: Dockerfile
      ports:
          - "5000:5000"
      environment: 
          - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          - AWS_DEFAULT_REGION=${AWS_REGION}
          - MLFLOW_S3_ENDPOINT_URL=http://s3:9000
      networks:
          - A
      entrypoint: ./wait-for-it.sh db:3306 -t 90 -- mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://${AWS_BUCKET_NAME}/ -h 0.0.0.0
networks:
    A:
        driver: bridge
